summarise(count = length(clade))
freq_tb$freq = freq_tb$count / sum(freq_tb$count)
return(freq_tb)
}
freq_NE_16 = make_frequency_table(data_assigned_NE_16)
freq_NE_17 = make_frequency_table(data_assigned_NE_17)
freq_US_16 = make_frequency_table(data_assigned_US_16)
freq_US_17 = make_frequency_table(data_assigned_US_17)
freq_NA_16 = make_frequency_table(data_assigned_NA_16)
freq_NA_17 = make_frequency_table(data_assigned_NA_17)
freq_NE_16$season = "2016-17"
freq_US_16$season = "2016-17"
freq_NA_16$season = "2016-17"
freq_NE_17$season = "2017-18"
freq_US_17$season = "2017-18"
freq_NA_17$season = "2017-18"
freq_NE_16$region = "Northeastern US"
freq_US_16$region = "United States"
freq_NA_16$region = "North America"
freq_NE_17$region = "Northeastern US"
freq_US_17$region = "United States"
freq_NA_17$region = "North America"
#bind all together
tb = rbind(freq_NE_16, freq_NE_17,
freq_US_16, freq_US_17,
freq_NA_16, freq_NA_17)
tb$region = factor(tb$region, levels = c("North America", "United States", "Northeastern US"))
library(ggplot2)
susc_x_label = c("3C.3A", "3C.2A", "3C.2A1-1", "3C.2A1-2", "3C.2A1-3",
"3C.2A2-1", "3C.2A2-2", "3C.2A3")
ggplot(tb, aes(x=clade, y=freq, fill=clade, linetype = factor(region))) +
geom_bar(color="black", width = 0.7, position=position_dodge(width=0.9), stat="identity") +
facet_wrap(~season, nrow=2) +
ylab("Proportion of sequences") +
xlab("") +
scale_x_discrete(labels=susc_x_label,
breaks = c("c3a", "c2a", "A1", "A1_2", "A1_3", "A2", "A2_2", "A3"),
limits = c("c3a", "c2a", "A1", "A1_2", "A1_3", "A2", "A2_2", "A3")) +
scale_fill_discrete(guide="none") +
scale_linetype_manual(name = "Region", values = c("solid", "dotted", "dashed")) +
guides(linetype=guide_legend(override.aes=list(fill=c(NA, NA, NA))) ) +
theme_bw() +
theme(axis.text.x = element_text(angle=310, hjust=0, vjust=1),
text=element_text(size=8),
axis.title = element_text(size=9),
axis.text = element_text(size=8),
panel.grid = element_blank(),
strip.background = element_rect(fill = "white", colour = "white"),
strip.text=element_text(size=8),
legend.position=c(0.8, 0.85),
legend.key.size=unit(0.7, "lines"))
library(ggplot2)
library(cowplot)
theme_set(theme_cowplot())
bind_rows(data_assigned_NA_16,
data_assigned_NA_17) %>%
bind_rows(data_assigned_NA_18)
data_assigned_NA_16
data_assigned_NA_16 %>% as_tibble()
data_assigned_NA_17 %>% as_tibble()
data_assigned_NA_18 %>% as_tibble()
bind_rows(data_assigned_NA_16,
data_assigned_NA_17) %>%
mutate(id = as.character(id)) %>%
bind_rows(data_assigned_NA_18)
north_america_monthly_freqs <- bind_rows(data_assigned_NA_16,
data_assigned_NA_17) %>%
mutate(id = as.character(id)) %>%
bind_rows(data_assigned_NA_18) %>%
as_tibble() %>%
mutate(year = lubridate::year(collection),
month = lubridate::month(collection),
# Reference date for each year/month (for plotting)
year_month_ref_date = lubridate::ymd(paste(year, month, 1, sep = '-'))) %>%
group_by(year, month, year_month_ref_date, clade) %>%
count() %>%
group_by(year, month) %>%
mutate(clade_freq = n/sum(n)) %>%
ungroup()
bind_rows(data_assigned_NA_16,
data_assigned_NA_17) %>%
mutate(id = as.character(id)) %>%
bind_rows(data_assigned_NA_18) %>%
as_tibble()
bind_rows(data_assigned_NA_16,
data_assigned_NA_17) %>%
mutate(id = as.character(id)) %>%
bind_rows(data_assigned_NA_18) %>%
as_tibble() %>%
mutate(year = lubridate::year(collection),
month = lubridate::month(collection),
# Reference date for each year/month (for plotting)
year_month_ref_date = lubridate::ymd(paste(year, month, 1, sep = '-')))
data_assigned_NA_16 %>% as_tibble()
data_assigned_NA_17 %>% as_tibble()
data_assigned_NA_18 %>% as_tibble()
bind_rows(data_assigned_NA_16,
data_assigned_NA_17) %>%
mutate(id = as.character(id)) %>%
bind_rows(data_assigned_NA_18) %>%
as_tibble() -> x
x
lubridate::year(x$collection)
x %>% filter(is.na(collection))
?separate
??separate
library(tidyr)
?separate
?separate_wider_delim
bind_rows(data_assigned_NA_16,
data_assigned_NA_17) %>%
mutate(id = as.character(id)) %>%
bind_rows(data_assigned_NA_18) %>%
as_tibble() %>%
separate(collection, into = c("year","month","day"), sep = '-',)
x[16067,]
?separate
library(stringr)
bind_rows(data_assigned_NA_16,
data_assigned_NA_17) %>%
mutate(id = as.character(id)) %>%
bind_rows(data_assigned_NA_18) %>%
as_tibble()
str_count("2016-10-13", "-")
bind_rows(data_assigned_NA_16,
data_assigned_NA_17) %>%
mutate(id = as.character(id)) %>%
bind_rows(data_assigned_NA_18) %>%
as_tibble() %>%
# Keep only correctly formatted dates
filter(str_count(collection, "-") == 2) %>%
mutate(year = lubridate::year(collection),
month = lubridate::month(collection),
# Reference date for each year/month (for plotting)
year_month_ref_date = lubridate::ymd(paste(year, month, 1, sep = '-'))) %>%
group_by(year, month, year_month_ref_date, clade) %>%
count() %>%
group_by(year, month) %>%
mutate(clade_freq = n/sum(n)) %>%
ungroup()
clade_colors <- tibble(clade = c("other", "3C.3a", "3C.2a", "3C.2a1-1", "3C.2a1-2","3C.2a1-3",
"3C.2a2-1", "3C.2a2-2", "3C.2a3"),
color = c("grey85","#F8766D", "#CD9600",
"#7CAE00", "#00BE67", "#00BFC4",
"#6666FF", "#C77CFF", "#FF61CC"))
north_america_monthly_freqs <- bind_rows(data_assigned_NA_16,
data_assigned_NA_17) %>%
mutate(id = as.character(id)) %>%
bind_rows(data_assigned_NA_18) %>%
as_tibble() %>%
# Keep only correctly formatted dates
filter(str_count(collection, "-") == 2) %>%
mutate(year = lubridate::year(collection),
month = lubridate::month(collection),
# Reference date for each year/month (for plotting)
year_month_ref_date = lubridate::ymd(paste(year, month, 1, sep = '-'))) %>%
group_by(year, month, year_month_ref_date, clade) %>%
count() %>%
group_by(year, month) %>%
mutate(clade_freq = n/sum(n)) %>%
ungroup()
north_america_monthly_freqs %>%
mutate(
clade = case_match(clade,
"A1" ~ "3C.2a1-1",
"A1_2" ~ "3C.2a1-2",
"A1_3" ~ "3C.2a1-3",
"A2" ~ "3C.2a2-1",
"A2_2" ~ "3C.2a2-2",
"A3" ~ "3C.2a3",
"c2a" ~ "3C.2a",
"c3a" ~ "3C.3a",
"other" ~ "other")
)%>%
mutate(clade = factor(clade, levels = clade_colors$clade))
north_america_monthly_freqs <- north_america_monthly_freqs %>%
mutate(
clade = case_match(clade,
"A1" ~ "3C.2a1-1",
"A1_2" ~ "3C.2a1-2",
"A1_3" ~ "3C.2a1-3",
"A2" ~ "3C.2a2-1",
"A2_2" ~ "3C.2a2-2",
"A3" ~ "3C.2a3",
"c2a" ~ "3C.2a",
"c3a" ~ "3C.3a",
"other" ~ "other")
)%>%
mutate(clade = factor(clade, levels = clade_colors$clade))
north_america_monthly_freqs <- north_america_monthly_freqs %>%
mutate(
clade = case_match(clade,
"A1" ~ "3C.2a1-1",
"A1_2" ~ "3C.2a1-2",
"A1_3" ~ "3C.2a1-3",
"A2" ~ "3C.2a2-1",
"A2_2" ~ "3C.2a2-2",
"A3" ~ "3C.2a3",
"c2a" ~ "3C.2a",
"c3a" ~ "3C.3a",
"other" ~ "other")
)%>%
mutate(clade = factor(clade, levels = clade_colors$clade))
unique(data_assigned_NA_18$clade)
unique(data_assigned_NA_16$clade)
unique(data_assigned_NA_17$clade)
data_assigned_NA_18 %>%
mutate(
clade = case_match(clade,
"A1" ~ "3C.2a1-1",
"A1_2" ~ "3C.2a1-2",
"A1_3" ~ "3C.2a1-3",
"A2" ~ "3C.2a2-1",
"A2_2" ~ "3C.2a2-2",
"A3" ~ "3C.2a3",
"c2a" ~ "3C.2a",
"c3a" ~ "3C.3a",
"other" ~ "other")
)
clade_colors <- tibble(clade = c("other", "3C.3a", "3C.2a", "3C.2a1-1", "3C.2a1-2","3C.2a1-3",
"3C.2a2-1", "3C.2a2-2", "3C.2a3"),
color = c("grey85","#F8766D", "#CD9600",
"#7CAE00", "#00BE67", "#00BFC4",
"#6666FF", "#C77CFF", "#FF61CC"))
north_america_monthly_freqs <- bind_rows(data_assigned_NA_16,
data_assigned_NA_17) %>%
mutate(id = as.character(id)) %>%
bind_rows(data_assigned_NA_18) %>%
as_tibble() %>%
# Keep only correctly formatted dates
filter(str_count(collection, "-") == 2) %>%
mutate(year = lubridate::year(collection),
month = lubridate::month(collection),
# Reference date for each year/month (for plotting)
year_month_ref_date = lubridate::ymd(paste(year, month, 1, sep = '-'))) %>%
group_by(year, month, year_month_ref_date, clade) %>%
count() %>%
group_by(year, month) %>%
mutate(clade_freq = n/sum(n)) %>%
ungroup()
north_america_monthly_freqs <- north_america_monthly_freqs %>%
mutate(
clade = case_match(clade,
"A1" ~ "3C.2a1-1",
"A1_2" ~ "3C.2a1-2",
"A1_3" ~ "3C.2a1-3",
"A2" ~ "3C.2a2-1",
"A2_2" ~ "3C.2a2-2",
"A3" ~ "3C.2a3",
"c2a" ~ "3C.2a",
"c3a" ~ "3C.3a",
"other" ~ "other")
)%>%
mutate(clade = factor(clade, levels = clade_colors$clade))
# Quick test, frequencies should sum to 1
stopifnot(
all(north_america_monthly_freqs %>% group_by(month, year) %>%
summarise(S = sum(clade_freq)) %>%
pull(S) %>% unique() %>%
round(10) == 1)
)
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = "2017-10-01",
clade_freq = 1.1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 1.1) +
geom_text(data = tibble(
year_month_ref_date = c("2017-04-01", "2018-04-01"),
clade_freq = 1.1,
label = c("2016-2017 season", "2017-2018 season")),
aes(label = label)) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
scale_y_continuous(breaks = seq(0,1,0.25)) +
xlab("") +
ylab("Frequency")
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = c("2017-10-01","2018-10-01"),
clade_freq = 1.1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 1.1) +
geom_text(data = tibble(
year_month_ref_date = c("2017-04-01", "2018-04-01"),
clade_freq = 1.1,
label = c("2016-2017 season", "2017-2018 season")),
aes(label = label)) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
scale_y_continuous(breaks = seq(0,1,0.25)) +
xlab("") +
ylab("Frequency")
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))
)
) %>%
as.character(),
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'),
paste("2019", seq(1,9,2), "01", sep = '-')
)) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = c("2017-10-01","2018-10-01"),
clade_freq = 1.1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 1.1) +
geom_text(data = tibble(
year_month_ref_date = c("2017-04-01", "2018-04-01"),
clade_freq = 1.1,
label = c("2016-2017 season", "2017-2018 season")),
aes(label = label)) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
scale_y_continuous(breaks = seq(0,1,0.25)) +
xlab("") +
ylab("Frequency")
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,11,2), "01", sep = '-'),
paste("2019", seq(1,9,2), "01", sep = '-')
)) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = c("2017-10-01","2018-10-01"),
clade_freq = 1.1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 1.1) +
geom_text(data = tibble(
year_month_ref_date = c("2017-04-01", "2018-04-01"),
clade_freq = 1.1,
label = c("2016-2017 season", "2017-2018 season")),
aes(label = label)) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
scale_y_continuous(breaks = seq(0,1,0.25)) +
xlab("") +
ylab("Frequency")
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,11,2), "01", sep = '-'),
paste("2019", seq(1,9,2), "01", sep = '-')
)) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = c("2017-10-01","2018-10-01"),
clade_freq = 1.1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 1.1) +
geom_text(data = tibble(
year_month_ref_date = c("2017-04-01", "2018-04-01", "2019-04-01"),
clade_freq = 1.1,
label = c("2016-2017 season", "2017-2018 season", "2018-2019 season")),
aes(label = label)) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
scale_y_continuous(breaks = seq(0,1,0.25)) +
xlab("") +
ylab("Frequency")
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,11,2), "01", sep = '-'),
paste("2019", seq(1,9,2), "01", sep = '-')
)) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = c("2017-10-01","2018-10-01"),
clade_freq = 1.1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 1.1) +
geom_text(data = tibble(
year_month_ref_date = c("2017-04-01", "2018-04-01", "2019-04-01"),
clade_freq = 1.1,
label = c("2016-2017 season", "2017-2018 season", "2018-2019 season")),
aes(label = label)) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
scale_y_continuous(breaks = seq(0,1,0.25)) +
xlab("") +
ylab("Clade frequency")
?save
save(extended_freq_plot, "../result/extended_freq_plot.RData")
extended_freq_plot <- north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,11,2), "01", sep = '-'),
paste("2019", seq(1,9,2), "01", sep = '-')
)) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = c("2017-10-01","2018-10-01"),
clade_freq = 1.1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 1.1) +
geom_text(data = tibble(
year_month_ref_date = c("2017-04-01", "2018-04-01", "2019-04-01"),
clade_freq = 1.1,
label = c("2016-2017 season", "2017-2018 season", "2018-2019 season")),
aes(label = label)) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
scale_y_continuous(breaks = seq(0,1,0.25)) +
xlab("") +
ylab("Clade frequency")
save(extended_freq_plot, file =  "../result/extended_freq_plot.RData")
