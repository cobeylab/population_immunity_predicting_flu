ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = "2017-10-01",
clade_freq = 1),
color = 'black', width = 0.1, just = 0, linetype = 2) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
xlab("") +
ylab("Frequency")
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = "2017-10-01",
clade_freq = 1),
color = 'black', width = 0.1, just = 0, linetype = 3) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
xlab("") +
ylab("Frequency")
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = "2017-10-01",
clade_freq = 1),
color = 'black', width = 0.05, just = 0, linetype = 3) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
xlab("") +
ylab("Frequency")
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = "2017-10-01",
clade_freq = 1),
color = 'black', width = 0.05, just = 0, linetype = 1) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
xlab("") +
ylab("Frequency")
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = "2017-10-01",
clade_freq = 1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 2) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
xlab("") +
ylab("Frequency")
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = "2017-10-01",
clade_freq = 1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 1.5) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
xlab("") +
ylab("Frequency")
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = "2017-10-01",
clade_freq = 1.1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 1.5) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
xlab("") +
ylab("Frequency")
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = "2017-10-01",
clade_freq = 1.1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 1.2) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
xlab("") +
ylab("Frequency")
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = "2017-10-01",
clade_freq = 1.1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 1.1) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
xlab("") +
ylab("Frequency")
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = "2017-10-01",
clade_freq = 1.1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 1.1) +
geom_text(data = tibble(
year_month_ref_date = c("2017-03-01", "2017-04-01"),
freq = 1.05,
label = c("2016-2017 season", "2017-2018 season")
))
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = "2017-10-01",
clade_freq = 1.1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 1.1) +
geom_text(data = tibble(
year_month_ref_date = c("2017-03-01", "2017-04-01"),
clade_freq = 1.05,
label = c("2016-2017 season", "2017-2018 season")
)) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
xlab("") +
ylab("Frequency")
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = "2017-10-01",
clade_freq = 1.1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 1.1) +
geom_text(data = tibble(
year_month_ref_date = c("2017-03-01", "2017-04-01"),
clade_freq = 1.05,
label = c("2016-2017 season", "2017-2018 season"),
aes(label = label)
)) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
xlab("") +
ylab("Frequency")
tibble(
year_month_ref_date = c("2017-03-01", "2017-04-01"),
clade_freq = 1.05,
label = c("2016-2017 season", "2017-2018 season")
north_america_monthly_freqs %>%
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = "2017-10-01",
clade_freq = 1.1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 1.1) +
geom_text(data = tibble(
year_month_ref_date = c("2017-03-01", "2017-04-01"),
clade_freq = 1.05,
label = c("2016-2017 season", "2017-2018 season")),
aes(label = label)) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
xlab("") +
ylab("Frequency")
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = "2017-10-01",
clade_freq = 1.1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 1.1) +
geom_text(data = tibble(
year_month_ref_date = c("2017-03-01", "2018-04-01"),
clade_freq = 1.05,
label = c("2016-2017 season", "2017-2018 season")),
aes(label = label)) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
xlab("") +
ylab("Frequency")
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = "2017-10-01",
clade_freq = 1.1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 1.1) +
geom_text(data = tibble(
year_month_ref_date = c("2017-03-01", "2018-04-01"),
clade_freq = 1.1,
label = c("2016-2017 season", "2017-2018 season")),
aes(label = label)) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
xlab("") +
ylab("Frequency")
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = "2017-10-01",
clade_freq = 1.1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 1.1) +
geom_text(data = tibble(
year_month_ref_date = c("2017-03-01", "2018-04-01"),
clade_freq = 1.1,
label = c("2016-2017 season", "2017-2018 season")),
aes(label = label)) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
scale_y_continuous(breaks = seq(0,1,0.25)) +
xlab("") +
ylab("Frequency")
north_america_monthly_freqs %>%
# Using discrete instead of date x axis to make spacing between columns even
ggplot(aes(x = as.character(year_month_ref_date), y = clade_freq)) +
scale_fill_manual(values = clade_colors$color) +
geom_col(aes(fill = clade),
width = 0.95, just = 0) +
scale_x_discrete(breaks = lubridate::ymd(
c("2016-11-01",
paste("2017", seq(1,11,2), "01", sep = '-'),
paste("2018", seq(1,9,2), "01", sep = '-'))) %>%
as.character(),
labels = function(x){
case_when(
lubridate::month(x) == 1 & lubridate::day(x) == 1 ~
paste0(lubridate::month(x, label = T, abbr = T),"\n",lubridate::year(x)),
T ~ lubridate::month(x, label = T, abbr = T)
)
}) +
# Hacky way to draw a line between Sep and Oct 2017 given discrete scale of x axis
geom_col(data = tibble(year_month_ref_date = "2017-10-01",
clade_freq = 1.1),
color = 'black', width = 0.05, just = 0, linetype = 1, linewidth = 1.1) +
geom_text(data = tibble(
year_month_ref_date = c("2017-04-01", "2018-04-01"),
clade_freq = 1.1,
label = c("2016-2017 season", "2017-2018 season")),
aes(label = label)) +
theme(legend.position = "right",
axis.text = element_text(lineheight = 1.1)) +
scale_y_continuous(breaks = seq(0,1,0.25)) +
xlab("") +
ylab("Frequency")
setwd("~/Projects/population_immunity_predicting_flu/Analyses/frequency/src")
#if("dplyr" %in% (.packages())){
#  detach("package:dplyr", unload=TRUE)
#  detach("package:plyr", unload=TRUE)
#}
#library(plyr)
library(dplyr)
########################################################################################
data_assigned_NE_16 = read.csv("../data_clade_assigned/NE_clade_assigned_season_2016.csv")
data_assigned_NE_17 = read.csv("../data_clade_assigned/NE_clade_assigned_season_2017.csv")
data_assigned_US_16 = read.csv("../data_clade_assigned/US_clade_assigned_season_2016.csv")
data_assigned_US_17 = read.csv("../data_clade_assigned/US_clade_assigned_season_2017.csv")
data_assigned_NA_16 = read.csv("../data_clade_assigned/NA_clade_assigned_season_2016.csv")
data_assigned_NA_17 = read.csv("../data_clade_assigned/NA_clade_assigned_season_2017.csv")
make_frequency_table = function(data_assigned){
data_assigned = data_assigned[data_assigned$clade != "other", ]
data_assigned$clade = factor(data_assigned$clade,
levels = c("c3a", "c2a", "A1", "A1_2", "A1_3", "A2", "A2_2", "A3"))
freq_tb = data_assigned %>%
group_by(clade) %>%
summarise(count = length(clade))
freq_tb$freq = freq_tb$count / sum(freq_tb$count)
return(freq_tb)
}
data_assigned_NA_17
data_assigned_NA_17 %>% as_tibble()
data_assigned_NA_17 %>% as_tibble() %>% arrange(desc(collection_date))
data_assigned_NA_17 %>% as_tibble() %>% arrange(desc(collection))
